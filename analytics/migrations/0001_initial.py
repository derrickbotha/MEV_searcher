# Generated by Django 3.2.25 on 2025-10-19 11:54

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('dashboard', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Alert',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('alert_type', models.CharField(choices=[('performance', 'Performance Alert'), ('risk', 'Risk Alert'), ('system', 'System Alert'), ('opportunity', 'Opportunity Alert')], max_length=50)),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=20)),
                ('status', models.CharField(choices=[('active', 'Active'), ('acknowledged', 'Acknowledged'), ('resolved', 'Resolved'), ('dismissed', 'Dismissed')], default='active', max_length=20)),
                ('metadata', models.JSONField(default=dict, help_text='Additional alert context')),
                ('triggered_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('acknowledged_at', models.DateTimeField(blank=True, null=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'alerts',
                'ordering': ['-triggered_at'],
            },
        ),
        migrations.CreateModel(
            name='AnalyticsReport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('report_type', models.CharField(choices=[('daily', 'Daily Report'), ('weekly', 'Weekly Report'), ('monthly', 'Monthly Report'), ('custom', 'Custom Report')], max_length=20)),
                ('config', models.JSONField(default=dict, help_text='Report configuration parameters')),
                ('date_range_start', models.DateTimeField()),
                ('date_range_end', models.DateTimeField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('generating', 'Generating'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('content', models.JSONField(default=dict, help_text='Generated report content')),
                ('summary', models.TextField(blank=True, help_text='Report summary')),
                ('file_path', models.CharField(blank=True, help_text='Path to generated report file', max_length=500)),
                ('file_size_bytes', models.BigIntegerField(default=0)),
                ('generated_at', models.DateTimeField(blank=True, null=True)),
                ('generation_duration', models.DurationField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'analytics_reports',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CustomDashboard',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('layout', models.JSONField(default=dict, help_text='Dashboard layout configuration')),
                ('widgets', models.JSONField(default=list, help_text='List of dashboard widgets')),
                ('is_public', models.BooleanField(default=False)),
                ('is_template', models.BooleanField(default=False, help_text='Whether this is a template dashboard')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_viewed_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'custom_dashboards',
                'ordering': ['-last_viewed_at', '-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='PerformanceMetric',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('metric_name', models.CharField(max_length=100)),
                ('metric_type', models.CharField(choices=[('latency', 'Latency'), ('throughput', 'Throughput'), ('profitability', 'Profitability'), ('success_rate', 'Success Rate'), ('gas_efficiency', 'Gas Efficiency'), ('cpu_usage', 'CPU Usage'), ('memory_usage', 'Memory Usage'), ('network_io', 'Network I/O')], max_length=50)),
                ('value', models.DecimalField(decimal_places=10, max_digits=20)),
                ('unit', models.CharField(blank=True, max_length=20)),
                ('tags', models.JSONField(default=dict, help_text='Additional metric context/tags')),
            ],
            options={
                'db_table': 'performance_metrics',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='PortfolioSnapshot',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('total_value_lamports', models.BigIntegerField(help_text='Total portfolio value in lamports')),
                ('total_profit_lamports', models.BigIntegerField(help_text='Total profit in lamports')),
                ('total_gas_used', models.BigIntegerField(help_text='Total gas used')),
                ('win_rate', models.FloatField(help_text='Win rate percentage')),
                ('profit_factor', models.FloatField(help_text='Profit factor (gross profit / gross loss)')),
                ('sharpe_ratio', models.FloatField(blank=True, null=True)),
                ('max_drawdown', models.FloatField(help_text='Maximum drawdown percentage')),
                ('volatility', models.FloatField(help_text='Portfolio volatility')),
                ('strategy_performance', models.JSONField(default=dict, help_text='Performance breakdown by strategy')),
            ],
            options={
                'db_table': 'portfolio_snapshots',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='RiskMetric',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('risk_type', models.CharField(choices=[('volatility', 'Volatility'), ('drawdown', 'Drawdown'), ('sharpe_ratio', 'Sharpe Ratio'), ('sortino_ratio', 'Sortino Ratio'), ('value_at_risk', 'Value at Risk'), ('expected_shortfall', 'Expected Shortfall')], max_length=50)),
                ('value', models.DecimalField(decimal_places=10, max_digits=20)),
                ('confidence_level', models.FloatField(default=0.95, help_text='Confidence level for VaR/ES calculations')),
                ('time_horizon', models.CharField(help_text='Time horizon (e.g., 1d, 1w, 1m)', max_length=20)),
                ('metadata', models.JSONField(default=dict, help_text='Additional risk calculation metadata')),
                ('strategy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='risk_metrics', to='dashboard.strategy')),
            ],
            options={
                'db_table': 'risk_metrics',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.AddIndex(
            model_name='portfoliosnapshot',
            index=models.Index(fields=['timestamp'], name='portfolio_s_timesta_e0db8c_idx'),
        ),
        migrations.AddField(
            model_name='performancemetric',
            name='strategy',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='dashboard.strategy'),
        ),
        migrations.AddField(
            model_name='performancemetric',
            name='transaction',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='dashboard.transaction'),
        ),
        migrations.AddField(
            model_name='customdashboard',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='custom_dashboards', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='customdashboard',
            name='forked_from',
            field=models.ForeignKey(blank=True, help_text='Dashboard this was forked from', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='forks', to='analytics.customdashboard'),
        ),
        migrations.AddField(
            model_name='analyticsreport',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='alert',
            name='notified_users',
            field=models.ManyToManyField(blank=True, related_name='alerts', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='alert',
            name='related_strategy',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='dashboard.strategy'),
        ),
        migrations.AddField(
            model_name='alert',
            name='related_transaction',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='dashboard.transaction'),
        ),
        migrations.AddIndex(
            model_name='riskmetric',
            index=models.Index(fields=['risk_type', 'timestamp'], name='risk_metric_risk_ty_bf1601_idx'),
        ),
        migrations.AddIndex(
            model_name='riskmetric',
            index=models.Index(fields=['strategy'], name='risk_metric_strateg_c2e933_idx'),
        ),
        migrations.AddIndex(
            model_name='riskmetric',
            index=models.Index(fields=['time_horizon'], name='risk_metric_time_ho_374671_idx'),
        ),
        migrations.AddIndex(
            model_name='performancemetric',
            index=models.Index(fields=['metric_name', 'timestamp'], name='performance_metric__2bab3d_idx'),
        ),
        migrations.AddIndex(
            model_name='performancemetric',
            index=models.Index(fields=['metric_type'], name='performance_metric__5267b3_idx'),
        ),
        migrations.AddIndex(
            model_name='performancemetric',
            index=models.Index(fields=['timestamp'], name='performance_timesta_79a065_idx'),
        ),
        migrations.AddIndex(
            model_name='performancemetric',
            index=models.Index(fields=['strategy'], name='performance_strateg_1e212f_idx'),
        ),
        migrations.AddIndex(
            model_name='customdashboard',
            index=models.Index(fields=['created_by'], name='custom_dash_created_f949a1_idx'),
        ),
        migrations.AddIndex(
            model_name='customdashboard',
            index=models.Index(fields=['is_public'], name='custom_dash_is_publ_6e777b_idx'),
        ),
        migrations.AddIndex(
            model_name='customdashboard',
            index=models.Index(fields=['is_template'], name='custom_dash_is_temp_3ced89_idx'),
        ),
        migrations.AddIndex(
            model_name='analyticsreport',
            index=models.Index(fields=['report_type'], name='analytics_r_report__21878c_idx'),
        ),
        migrations.AddIndex(
            model_name='analyticsreport',
            index=models.Index(fields=['status'], name='analytics_r_status_4dcdd6_idx'),
        ),
        migrations.AddIndex(
            model_name='analyticsreport',
            index=models.Index(fields=['created_at'], name='analytics_r_created_59b0e2_idx'),
        ),
        migrations.AddIndex(
            model_name='alert',
            index=models.Index(fields=['alert_type'], name='alerts_alert_t_eda531_idx'),
        ),
        migrations.AddIndex(
            model_name='alert',
            index=models.Index(fields=['severity'], name='alerts_severit_362484_idx'),
        ),
        migrations.AddIndex(
            model_name='alert',
            index=models.Index(fields=['status'], name='alerts_status_0e4dc1_idx'),
        ),
        migrations.AddIndex(
            model_name='alert',
            index=models.Index(fields=['triggered_at'], name='alerts_trigger_bbc1f5_idx'),
        ),
    ]
