# Generated by Django 3.2.25 on 2025-10-19 11:54

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='APIKey',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='API key name/description', max_length=100)),
                ('key', models.CharField(help_text='API key value', max_length=128, unique=True)),
                ('key_type', models.CharField(choices=[('read', 'Read Only'), ('write', 'Read/Write'), ('admin', 'Admin')], default='read', max_length=10)),
                ('permissions', models.JSONField(default=list, help_text='List of specific permissions')),
                ('rate_limit_requests', models.IntegerField(default=1000, help_text='Requests per time window')),
                ('rate_limit_window_seconds', models.IntegerField(default=3600, help_text='Time window in seconds')),
                ('is_active', models.BooleanField(default=True)),
                ('expires_at', models.DateTimeField(blank=True, help_text='Expiration date', null=True)),
                ('last_used_at', models.DateTimeField(blank=True, null=True)),
                ('request_count', models.BigIntegerField(default=0, help_text='Total requests made')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='api_keys', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'api_keys',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Webhook',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Webhook name', max_length=100)),
                ('url', models.URLField(help_text='Webhook URL')),
                ('secret', models.CharField(help_text='Webhook secret for signature verification', max_length=128)),
                ('events', models.JSONField(default=list, help_text='List of events to trigger webhook')),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('failed', 'Failed')], default='active', max_length=10)),
                ('retry_count', models.IntegerField(default=3, help_text='Number of retry attempts')),
                ('retry_delay_seconds', models.IntegerField(default=60, help_text='Delay between retries')),
                ('success_count', models.IntegerField(default=0, help_text='Successful deliveries')),
                ('failure_count', models.IntegerField(default=0, help_text='Failed deliveries')),
                ('last_success_at', models.DateTimeField(blank=True, null=True)),
                ('last_failure_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='webhooks', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'webhooks',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='WebhookDelivery',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('event_type', models.CharField(choices=[('transaction.new', 'New Transaction'), ('opportunity.detected', 'MEV Opportunity Detected'), ('opportunity.executed', 'MEV Opportunity Executed'), ('alert.triggered', 'Alert Triggered'), ('model.trained', 'ML Model Trained'), ('backup.completed', 'Backup Completed')], max_length=50)),
                ('payload', models.JSONField(help_text='Webhook payload data')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('success', 'Success'), ('failed', 'Failed'), ('retry', 'Retry Scheduled')], default='pending', max_length=10)),
                ('attempt_count', models.IntegerField(default=0, help_text='Number of delivery attempts')),
                ('response_status_code', models.IntegerField(blank=True, null=True)),
                ('response_body', models.TextField(blank=True)),
                ('response_headers', models.JSONField(default=dict)),
                ('scheduled_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('next_retry_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('error_code', models.CharField(blank=True, max_length=50)),
                ('webhook', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deliveries', to='api.webhook')),
            ],
            options={
                'db_table': 'webhook_deliveries',
                'ordering': ['-scheduled_at'],
            },
        ),
        migrations.CreateModel(
            name='APIRequestLog',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('method', models.CharField(max_length=10)),
                ('path', models.CharField(max_length=500)),
                ('query_params', models.TextField(blank=True, help_text='Query parameters')),
                ('user_agent', models.TextField(blank=True)),
                ('status_code', models.IntegerField()),
                ('response_size_bytes', models.IntegerField(default=0)),
                ('response_time_ms', models.FloatField(help_text='Response time in milliseconds')),
                ('ip_address', models.GenericIPAddressField()),
                ('country', models.CharField(blank=True, help_text='Country code', max_length=2)),
                ('is_error', models.BooleanField(default=False)),
                ('error_message', models.TextField(blank=True)),
                ('rate_limit_hit', models.BooleanField(default=False, help_text='Whether rate limit was hit')),
                ('api_key', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.apikey')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'api_request_logs',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.AddIndex(
            model_name='webhookdelivery',
            index=models.Index(fields=['webhook'], name='webhook_del_webhook_26b988_idx'),
        ),
        migrations.AddIndex(
            model_name='webhookdelivery',
            index=models.Index(fields=['status'], name='webhook_del_status_269a2c_idx'),
        ),
        migrations.AddIndex(
            model_name='webhookdelivery',
            index=models.Index(fields=['event_type'], name='webhook_del_event_t_d86659_idx'),
        ),
        migrations.AddIndex(
            model_name='webhookdelivery',
            index=models.Index(fields=['scheduled_at'], name='webhook_del_schedul_2f4f06_idx'),
        ),
        migrations.AddIndex(
            model_name='webhook',
            index=models.Index(fields=['user'], name='webhooks_user_id_2b0fc2_idx'),
        ),
        migrations.AddIndex(
            model_name='webhook',
            index=models.Index(fields=['status'], name='webhooks_status_4b37f0_idx'),
        ),
        migrations.AddIndex(
            model_name='webhook',
            index=models.Index(fields=['created_at'], name='webhooks_created_913b65_idx'),
        ),
        migrations.AddIndex(
            model_name='apirequestlog',
            index=models.Index(fields=['api_key'], name='api_request_api_key_a61f00_idx'),
        ),
        migrations.AddIndex(
            model_name='apirequestlog',
            index=models.Index(fields=['user'], name='api_request_user_id_7ae1a1_idx'),
        ),
        migrations.AddIndex(
            model_name='apirequestlog',
            index=models.Index(fields=['timestamp'], name='api_request_timesta_daf0c8_idx'),
        ),
        migrations.AddIndex(
            model_name='apirequestlog',
            index=models.Index(fields=['status_code'], name='api_request_status__eaf3b8_idx'),
        ),
        migrations.AddIndex(
            model_name='apirequestlog',
            index=models.Index(fields=['is_error'], name='api_request_is_erro_143013_idx'),
        ),
        migrations.AddIndex(
            model_name='apikey',
            index=models.Index(fields=['user'], name='api_keys_user_id_1863c8_idx'),
        ),
        migrations.AddIndex(
            model_name='apikey',
            index=models.Index(fields=['key'], name='api_keys_key_291dcc_idx'),
        ),
        migrations.AddIndex(
            model_name='apikey',
            index=models.Index(fields=['is_active'], name='api_keys_is_acti_73be43_idx'),
        ),
        migrations.AddIndex(
            model_name='apikey',
            index=models.Index(fields=['expires_at'], name='api_keys_expires_f68b1a_idx'),
        ),
    ]
