version: '3.8'

services:
  # PostgreSQL Database with pgvector
  postgres:
    image: postgres:15-alpine
    container_name: mev_postgres
    environment:
      POSTGRES_DB: mev_dashboard
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - mev_network

  # Redis for caching and message queuing
  redis:
    image: redis:7-alpine
    container_name: mev_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - mev_network

  # pgvector setup (one-time setup container)
  pgvector-setup:
    image: postgres:15-alpine
    container_name: pgvector_setup
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      PGHOST: postgres
      PGUSER: postgres
      PGPASSWORD: postgres
      PGDATABASE: mev_dashboard
    command: >
      sh -c "
        apk add --no-cache git build-base postgresql-dev &&
        git clone https://github.com/pgvector/pgvector.git /tmp/pgvector &&
        cd /tmp/pgvector &&
        make &&
        make install &&
        echo 'Waiting for PostgreSQL to be ready...' &&
        sleep 10 &&
        psql -c 'CREATE EXTENSION IF NOT EXISTS vector;' &&
        psql -c 'CREATE DATABASE IF NOT EXISTS vectors;' &&
        psql -d vectors -c 'CREATE EXTENSION IF NOT EXISTS vector;' &&
        echo 'pgvector setup complete!'
      "
    networks:
      - mev_network

  # Django MEV Dashboard
  mev-dashboard:
    build: .
    container_name: mev_dashboard
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      pgvector-setup:
        condition: service_completed_successfully
    environment:
      DJANGO_SETTINGS_MODULE: mev_dashboard.settings
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/mev_dashboard
      REDIS_URL: redis://redis:6379/0
      SECRET_KEY: django-insecure-dev-key-change-in-production
      DEBUG: "True"
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - ./logs:/app/logs
      - ./media:/app/media
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - mev_network
    command: python manage.py runserver 0.0.0.0:8000

volumes:
  postgres_data:
  redis_data:

networks:
  mev_network:
    driver: bridge
